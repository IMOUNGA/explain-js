{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Component, ViewChild, Input, Output, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { NgIf, NgForOf } from '@angular/common';\nconst _c0 = [\"progressbar\"];\nconst _c1 = [\"explain\"];\nfunction NgExplainComponent_div_2_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 14);\n  }\n}\nfunction NgExplainComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 3, 4)(2, \"p\", 5);\n    i0.ɵɵlistener(\"click\", function NgExplainComponent_div_2_Template_p_click_2_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.close());\n    });\n    i0.ɵɵtext(3, \"x\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 6)(5, \"h3\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\", 7)(10, \"div\", 8, 9);\n    i0.ɵɵtemplate(12, NgExplainComponent_div_2_div_12_Template, 1, 0, \"div\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"div\", 11)(14, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function NgExplainComponent_div_2_Template_button_click_14_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.previousStep());\n    });\n    i0.ɵɵtext(15, \"Pr\\xE9c\\xE9dent\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function NgExplainComponent_div_2_Template_button_click_16_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.nextStep());\n    });\n    i0.ɵɵtext(17, \"Suivant\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r0.currentSteps.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.currentSteps.desc);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.steps);\n  }\n}\nvar POSITIONS;\n(function (POSITIONS) {\n  POSITIONS[\"ABOVE\"] = \"above\";\n  POSITIONS[\"BELOW\"] = \"below\";\n  POSITIONS[\"LEFT\"] = \"left\";\n  POSITIONS[\"RIGHT\"] = \"right\";\n  POSITIONS[\"DEFAULT\"] = \"left\";\n})(POSITIONS || (POSITIONS = {}));\nclass NgExplainComponent {\n  constructor() {\n    this.closeTutorial = new EventEmitter();\n    this.currentStepElementOriginalBorder = '';\n    this.currentStepElementOriginalZindex = '';\n    this.position = 0;\n    this.percent = 0;\n    this.positions = POSITIONS.DEFAULT;\n  }\n  ngOnInit() {\n    this.currentSteps = this.steps[this.position];\n    this.changeCibling();\n  }\n  ngAfterViewInit() {\n    this.initProgressRound();\n  }\n  close() {\n    this.reInitOriginCibling();\n    this.closeTutorial.emit(true);\n  }\n  changeCibling() {\n    this.reInitOriginCibling();\n    this.currentSteps = this.steps[this.position];\n    this.currentStepElement = document.querySelector(this.currentSteps.selector);\n    const currentStepStyle = this.currentStepElement.style;\n    this.currentStepElementOriginalBorder = currentStepStyle.border;\n    this.currentStepElementOriginalZindex = currentStepStyle.zIndex;\n    currentStepStyle.zIndex = '1001';\n  }\n  reInitOriginCibling() {\n    if (this.currentStepElement) {\n      this.currentStepElement.style.border = this.currentStepElementOriginalBorder;\n      this.currentStepElement.style.zIndex = this.currentStepElementOriginalZindex;\n      this.currentStepElement.style.zIndex;\n    }\n  }\n  initProgressRound() {\n    this.rounds = document.querySelectorAll('.progress-round');\n    this.rounds[0].classList.add('active');\n  }\n  nextStep() {\n    if (this.position + 1 < this.steps.length) {\n      this.position++;\n      this.changeCibling();\n      this.progressStepNext();\n    } else {\n      this.close();\n    }\n  }\n  previousStep() {\n    if (this.position - 1 >= 0) {\n      this.progressStepprevious();\n      this.position--;\n      this.changeCibling();\n    }\n  }\n  progressStepNext() {\n    if (this.position < this.rounds.length) {\n      this.rounds[this.position].classList.add('active');\n    }\n  }\n  progressStepprevious() {\n    if (this.position > 0) {\n      this.rounds[this.position].classList.remove('active');\n    }\n  }\n}\nNgExplainComponent.ɵfac = function NgExplainComponent_Factory(t) {\n  return new (t || NgExplainComponent)();\n};\nNgExplainComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NgExplainComponent,\n  selectors: [[\"ng-explain\"]],\n  viewQuery: function NgExplainComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(_c1, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.progressbar = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.explain = _t.first);\n    }\n  },\n  inputs: {\n    steps: \"steps\"\n  },\n  outputs: {\n    closeTutorial: \"closeTutorial\"\n  },\n  decls: 3,\n  vars: 1,\n  consts: [[1, \"ng-explain-wrapper\"], [1, \"overlay\"], [\"class\", \"explain-wrapper\", 4, \"ngIf\"], [1, \"explain-wrapper\"], [\"explain\", \"\"], [1, \"explain-close\", 3, \"click\"], [1, \"explain-text-content\"], [1, \"explain-progression-container\"], [1, \"explain-progression-dots\"], [\"progressbar\", \"\"], [\"class\", \"progress-round\", 4, \"ngFor\", \"ngForOf\"], [1, \"explain-progression-buttons\"], [1, \"btn\", \"previous\", 3, \"click\"], [1, \"btn\", \"next\", 3, \"click\"], [1, \"progress-round\"]],\n  template: function NgExplainComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"div\", 1);\n      i0.ɵɵtemplate(2, NgExplainComponent_div_2_Template, 18, 3, \"div\", 2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.steps);\n    }\n  },\n  dependencies: [i1.NgIf, i1.NgForOf],\n  styles: [\"@import\\\"https://use.typekit.net/bks3dkn.css\\\";[_ngcontent-%COMP%]:root{--progress-width: 0}*[_ngcontent-%COMP%]{box-sizing:border-box}html[_ngcontent-%COMP%], body[_ngcontent-%COMP%], ng-explain-wrapper[_ngcontent-%COMP%]{padding:0;margin:0;position:relative}.ng-explain-wrapper[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;justify-content:center;width:100%;height:100%;position:absolute;top:0;left:0}.overlay[_ngcontent-%COMP%]{position:absolute;top:0;left:0;width:100%;height:100%;z-index:1000;background-color:#00000091}.explain-wrapper[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;justify-content:center;position:relative;width:30rem;min-height:28rem;padding:2.5rem 3.5rem;overflow:clip;text-overflow:clip;background-color:#fff;box-shadow:#32325d40 0 2px 5px -1px,#0000004d 0 1px 3px -1px;border-radius:1rem;text-align:center;z-index:10002}.explain-text-content[_ngcontent-%COMP%]{margin-top:1rem}.explain-text-content[_ngcontent-%COMP%] > h3[_ngcontent-%COMP%]{margin-bottom:2rem;color:#220f3cbf}.explain-text-content[_ngcontent-%COMP%] > p[_ngcontent-%COMP%]{line-height:1.7}.explain-progression-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;margin-top:3rem}.explain-progression-container[_ngcontent-%COMP%] > .explain-progression-buttons[_ngcontent-%COMP%] > .btn[_ngcontent-%COMP%]{width:7rem;color:#fff;font-weight:700;height:2rem;border:none;border-radius:.2rem}.explain-progression-container[_ngcontent-%COMP%] > .explain-progression-buttons[_ngcontent-%COMP%] > .next[_ngcontent-%COMP%]{background-color:#220f3c}.explain-progression-container[_ngcontent-%COMP%] > .explain-progression-buttons[_ngcontent-%COMP%] > .previous[_ngcontent-%COMP%]{margin-right:2rem;background-color:#220f3c6b}.explain-progression-container[_ngcontent-%COMP%] > .explain-progression-dots[_ngcontent-%COMP%]{display:flex;justify-content:space-between;position:relative;width:9rem;max-width:100%;margin-bottom:2rem}.explain-progression-container[_ngcontent-%COMP%] > .explain-progression-dots[_ngcontent-%COMP%] > .progress-round[_ngcontent-%COMP%]{height:.8rem;width:.8rem;background-color:#efefeff7;transition:.6s ease-in-out;border-radius:50%}.explain-progression-container[_ngcontent-%COMP%] > .explain-progression-dots[_ngcontent-%COMP%] > .progress-round.active[_ngcontent-%COMP%]{background-color:#ff407f}.progress-round[_ngcontent-%COMP%]:first-child{background-color:#ff407f}.explain-wrapper[_ngcontent-%COMP%] > .explain-close[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;position:absolute;top:0;right:12px;height:.8rem;width:.8rem;padding:.8rem;cursor:pointer;background-color:#a29aad;border-radius:50%;color:#fff;font-size:.8rem}\"]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgExplainComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ng-explain',\n      template: `\n    <div class=\"ng-explain-wrapper\">\n      <div class=\"overlay\"></div>\n      <div class=\"explain-wrapper\" *ngIf=\"steps\" #explain>\n        <p class=\"explain-close\" (click)=\"close()\">x</p>\n        <div class=\"explain-text-content\">\n          <h3>{{ currentSteps.title }}</h3>\n          <p>{{ currentSteps.desc }}</p>\n        </div>\n        <div class=\"explain-progression-container\">\n          <div class=\"explain-progression-dots\" #progressbar>\n            <div class=\"progress-round\" *ngFor=\"let step of steps; let i = index\"></div>\n          </div>\n          <div class=\"explain-progression-buttons\">\n            <button class=\"btn previous\" (click)=\"previousStep()\">Précédent</button>\n            <button class=\"btn next\" (click)=\"nextStep()\">Suivant</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  `,\n      styles: [\"@import\\\"https://use.typekit.net/bks3dkn.css\\\";:root{--progress-width: 0}*{box-sizing:border-box}html,body,ng-explain-wrapper{padding:0;margin:0;position:relative}.ng-explain-wrapper{display:flex;flex-direction:column;align-items:center;justify-content:center;width:100%;height:100%;position:absolute;top:0;left:0}.overlay{position:absolute;top:0;left:0;width:100%;height:100%;z-index:1000;background-color:#00000091}.explain-wrapper{display:flex;flex-direction:column;align-items:center;justify-content:center;position:relative;width:30rem;min-height:28rem;padding:2.5rem 3.5rem;overflow:clip;text-overflow:clip;background-color:#fff;box-shadow:#32325d40 0 2px 5px -1px,#0000004d 0 1px 3px -1px;border-radius:1rem;text-align:center;z-index:10002}.explain-text-content{margin-top:1rem}.explain-text-content>h3{margin-bottom:2rem;color:#220f3cbf}.explain-text-content>p{line-height:1.7}.explain-progression-container{display:flex;flex-direction:column;align-items:center;margin-top:3rem}.explain-progression-container>.explain-progression-buttons>.btn{width:7rem;color:#fff;font-weight:700;height:2rem;border:none;border-radius:.2rem}.explain-progression-container>.explain-progression-buttons>.next{background-color:#220f3c}.explain-progression-container>.explain-progression-buttons>.previous{margin-right:2rem;background-color:#220f3c6b}.explain-progression-container>.explain-progression-dots{display:flex;justify-content:space-between;position:relative;width:9rem;max-width:100%;margin-bottom:2rem}.explain-progression-container>.explain-progression-dots>.progress-round{height:.8rem;width:.8rem;background-color:#efefeff7;transition:.6s ease-in-out;border-radius:50%}.explain-progression-container>.explain-progression-dots>.progress-round.active{background-color:#ff407f}.progress-round:first-child{background-color:#ff407f}.explain-wrapper>.explain-close{display:flex;justify-content:center;align-items:center;position:absolute;top:0;right:12px;height:.8rem;width:.8rem;padding:.8rem;cursor:pointer;background-color:#a29aad;border-radius:50%;color:#fff;font-size:.8rem}\\n\"]\n    }]\n  }], function () {\n    return [];\n  }, {\n    progressbar: [{\n      type: ViewChild,\n      args: ['progressbar']\n    }],\n    explain: [{\n      type: ViewChild,\n      args: ['explain']\n    }],\n    steps: [{\n      type: Input\n    }],\n    closeTutorial: [{\n      type: Output\n    }]\n  });\n})();\nclass NgExplainModule {}\nNgExplainModule.ɵfac = function NgExplainModule_Factory(t) {\n  return new (t || NgExplainModule)();\n};\nNgExplainModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NgExplainModule\n});\nNgExplainModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgExplainModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgExplainComponent],\n      imports: [NgIf, NgForOf],\n      exports: [NgExplainComponent]\n    }]\n  }], null, null);\n})();\n\n/*\n * Public API Surface of ng-explain\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NgExplainComponent, NgExplainModule };","map":{"version":3,"mappings":"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","names":["POSITIONS","NgExplainComponent","constructor","EventEmitter","DEFAULT","ngOnInit","currentSteps","steps","position","changeCibling","ngAfterViewInit","initProgressRound","close","reInitOriginCibling","closeTutorial","emit","currentStepElement","document","querySelector","selector","currentStepStyle","style","currentStepElementOriginalBorder","border","currentStepElementOriginalZindex","zIndex","rounds","querySelectorAll","classList","add","nextStep","length","progressStepNext","previousStep","progressStepprevious","remove","i1","Component","args","template","styles","progressbar","ViewChild","explain","Input","Output","NgExplainModule","NgModule","declarations","imports","NgIf","NgForOf","exports"],"sources":["/home/romann/Web/Others/Angular-Librarys/explain-js/projects/ng-explain/src/lib/Enums/positions.ts","/home/romann/Web/Others/Angular-Librarys/explain-js/projects/ng-explain/src/lib/ng-explain.component.ts","/home/romann/Web/Others/Angular-Librarys/explain-js/projects/ng-explain/src/lib/ng-explain.module.ts","/home/romann/Web/Others/Angular-Librarys/explain-js/projects/ng-explain/src/public-api.ts","/home/romann/Web/Others/Angular-Librarys/explain-js/projects/ng-explain/src/ng-explain.ts"],"sourcesContent":["export enum POSITIONS {\n    ABOVE = 'above',\n    BELOW = 'below',\n    LEFT = 'left',\n    RIGHT = 'right',\n    DEFAULT = 'left'\n}\n\n\n","import {AfterViewInit, Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\nimport {POSITIONS} from \"./Enums/positions\";\n\ninterface ISteps {\n  title: string;\n  desc: string;\n  selector: string;\n}\n\n@Component({\n  selector: 'ng-explain',\n  template: `\n    <div class=\"ng-explain-wrapper\">\n      <div class=\"overlay\"></div>\n      <div class=\"explain-wrapper\" *ngIf=\"steps\" #explain>\n        <p class=\"explain-close\" (click)=\"close()\">x</p>\n        <div class=\"explain-text-content\">\n          <h3>{{ currentSteps.title }}</h3>\n          <p>{{ currentSteps.desc }}</p>\n        </div>\n        <div class=\"explain-progression-container\">\n          <div class=\"explain-progression-dots\" #progressbar>\n            <div class=\"progress-round\" *ngFor=\"let step of steps; let i = index\"></div>\n          </div>\n          <div class=\"explain-progression-buttons\">\n            <button class=\"btn previous\" (click)=\"previousStep()\">Précédent</button>\n            <button class=\"btn next\" (click)=\"nextStep()\">Suivant</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  `,\n  styleUrls: [\"./ng-explain.component.scss\"]\n})\nexport class NgExplainComponent implements OnInit, AfterViewInit {\n  @ViewChild('progressbar') progressbar!: ElementRef;\n  @ViewChild('explain') explain!: ElementRef;\n\n  @Input() steps!: ISteps[];\n  @Output() closeTutorial: EventEmitter<boolean> = new EventEmitter();\n\n  currentSteps!: ISteps;\n  currentStepElement!: HTMLElement;\n  currentStepElementOriginalBorder = '';\n  currentStepElementOriginalZindex = '';\n  position = 0;\n  rounds!: NodeListOf<HTMLElement>;\n  percent = 0;\n  positions: POSITIONS = POSITIONS.DEFAULT;\n  elementCibling!: HTMLElement;\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n    this.currentSteps = this.steps[this.position];\n    this.changeCibling();\n  }\n\n  ngAfterViewInit(): void {\n    this.initProgressRound();\n  }\n\n  close(): void {\n    this.reInitOriginCibling();\n    this.closeTutorial.emit(true);\n  }\n\n  changeCibling(): void {\n    this.reInitOriginCibling();\n\n    this.currentSteps = this.steps[this.position];\n\n    this.currentStepElement = document.querySelector(this.currentSteps.selector) as HTMLElement;\n    const currentStepStyle = this.currentStepElement.style;\n    this.currentStepElementOriginalBorder = currentStepStyle.border;\n    this.currentStepElementOriginalZindex = currentStepStyle.zIndex;\n    currentStepStyle.zIndex = '1001';\n  }\n\n  reInitOriginCibling(): void {\n    if (this.currentStepElement) {\n      this.currentStepElement.style.border = this.currentStepElementOriginalBorder;\n      this.currentStepElement.style.zIndex = this.currentStepElementOriginalZindex;\n      this.currentStepElement.style.zIndex;\n    }\n  }\n\n  initProgressRound(): void {\n    this.rounds = document.querySelectorAll('.progress-round');\n    this.rounds[0].classList.add('active');\n  }\n\n  nextStep(): void {\n    if ((this.position + 1) < this.steps.length) {\n      this.position++;\n      this.changeCibling();\n      this.progressStepNext();\n    } else {\n      this.close();\n    }\n  }\n\n  previousStep(): void {\n    if ((this.position - 1) >= 0) {\n      this.progressStepprevious();\n      this.position--;\n      this.changeCibling();\n    }\n  }\n\n  progressStepNext(): void {\n    if (this.position < this.rounds.length) {\n      this.rounds[this.position].classList.add('active');\n    }\n  }\n\n  progressStepprevious(): void {\n    if (this.position > 0) {\n      this.rounds[this.position].classList.remove('active');\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { NgExplainComponent } from './ng-explain.component';\nimport {NgIf, NgForOf} from \"@angular/common\";\n\n\n@NgModule({\n  declarations: [\n    NgExplainComponent\n  ],\n  imports: [\n    NgIf,\n    NgForOf\n  ],\n  exports: [\n    NgExplainComponent\n  ]\n})\nexport class NgExplainModule { }\n","/*\n * Public API Surface of ng-explain\n */\n\n// export * from './lib/ng-explain.service';\nexport * from './lib/ng-explain.component';\nexport * from './lib/ng-explain.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}