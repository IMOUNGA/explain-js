{"hash":"ac90d4521c5961034a7b6f51cb8b543e904f0ba8","fesm2020":[{"exports":["NgExplainComponent","NgExplainModule"],"facadeModuleId":"/Users/romann/Sites/Angular-Librarys/explain-js/dist/ng-explain/esm2020/ng-explain.mjs","isDynamicEntry":false,"isEntry":true,"isImplicitEntry":false,"moduleIds":["/Users/romann/Sites/Angular-Librarys/explain-js/dist/ng-explain/esm2020/lib/Enums/positions.mjs","/Users/romann/Sites/Angular-Librarys/explain-js/dist/ng-explain/esm2020/lib/ng-explain.component.mjs","/Users/romann/Sites/Angular-Librarys/explain-js/dist/ng-explain/esm2020/lib/ng-explain.module.mjs","/Users/romann/Sites/Angular-Librarys/explain-js/dist/ng-explain/esm2020/public-api.mjs","/Users/romann/Sites/Angular-Librarys/explain-js/dist/ng-explain/esm2020/ng-explain.mjs"],"name":"ng-explain","type":"chunk","dynamicImports":[],"fileName":"ng-explain.mjs","implicitlyLoadedBefore":[],"importedBindings":{"@angular/core":["EventEmitter","*","Component","ViewChild","Input","Output","NgModule"],"@angular/common":["*","NgIf","NgForOf"]},"imports":["@angular/core","@angular/common"],"modules":{"/Users/romann/Sites/Angular-Librarys/explain-js/dist/ng-explain/esm2020/lib/Enums/positions.mjs":{"code":"var POSITIONS;\n(function (POSITIONS) {\n    POSITIONS[\"ABOVE\"] = \"above\";\n    POSITIONS[\"BELOW\"] = \"below\";\n    POSITIONS[\"LEFT\"] = \"left\";\n    POSITIONS[\"RIGHT\"] = \"right\";\n    POSITIONS[\"DEFAULT\"] = \"left\";\n})(POSITIONS || (POSITIONS = {}));","originalLength":932,"removedExports":[],"renderedExports":["POSITIONS"],"renderedLength":242},"/Users/romann/Sites/Angular-Librarys/explain-js/dist/ng-explain/esm2020/lib/ng-explain.component.mjs":{"code":"class NgExplainComponent {\n    constructor() {\n        this.closeTutorial = new EventEmitter();\n        this.currentStepElementOriginalBorder = '';\n        this.currentStepElementOriginalZindex = '';\n        this.position = 0;\n        this.percent = 0;\n        this.positions = POSITIONS.DEFAULT;\n    }\n    ngOnInit() {\n        this.currentSteps = this.steps[this.position];\n        this.changeCibling();\n    }\n    ngAfterViewInit() {\n        this.initProgressRound();\n    }\n    close() {\n        this.reInitOriginCibling();\n        this.closeTutorial.emit(true);\n    }\n    changeCibling() {\n        this.reInitOriginCibling();\n        this.currentSteps = this.steps[this.position];\n        this.currentStepElement = document.querySelector(this.currentSteps.selector);\n        const currentStepStyle = this.currentStepElement.style;\n        this.currentStepElementOriginalBorder = currentStepStyle.border;\n        this.currentStepElementOriginalZindex = currentStepStyle.zIndex;\n        currentStepStyle.zIndex = '1001';\n    }\n    reInitOriginCibling() {\n        if (this.currentStepElement) {\n            this.currentStepElement.style.border = this.currentStepElementOriginalBorder;\n            this.currentStepElement.style.zIndex = this.currentStepElementOriginalZindex;\n            this.currentStepElement.style.zIndex;\n        }\n    }\n    initProgressRound() {\n        this.rounds = document.querySelectorAll('.progress-round');\n        this.rounds[0].classList.add('active');\n    }\n    nextStep() {\n        if ((this.position + 1) < this.steps.length) {\n            this.position++;\n            this.changeCibling();\n            this.progressStepNext();\n        }\n        else {\n            this.close();\n        }\n    }\n    previousStep() {\n        if ((this.position - 1) >= 0) {\n            this.progressStepprevious();\n            this.position--;\n            this.changeCibling();\n        }\n    }\n    progressStepNext() {\n        if (this.position < this.rounds.length) {\n            this.rounds[this.position].classList.add('active');\n        }\n    }\n    progressStepprevious() {\n        if (this.position > 0) {\n            this.rounds[this.position].classList.remove('active');\n        }\n    }\n}\nNgExplainComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.5\", ngImport: i0, type: NgExplainComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nNgExplainComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.5\", type: NgExplainComponent, selector: \"ng-explain\", inputs: { steps: \"steps\" }, outputs: { closeTutorial: \"closeTutorial\" }, viewQueries: [{ propertyName: \"progressbar\", first: true, predicate: [\"progressbar\"], descendants: true }, { propertyName: \"explain\", first: true, predicate: [\"explain\"], descendants: true }], ngImport: i0, template: `\n    <div class=\"ng-explain-wrapper\">\n      <div class=\"overlay\"></div>\n      <div class=\"explain-wrapper\" *ngIf=\"steps\" #explain>\n        <p class=\"explain-close\" (click)=\"close()\">x</p>\n        <div class=\"explain-text-content\">\n          <h3>{{ currentSteps.title }}</h3>\n          <p>{{ currentSteps.desc }}</p>\n        </div>\n        <div class=\"explain-progression-container\">\n          <div class=\"explain-progression-dots\" #progressbar>\n            <div class=\"progress-round\" *ngFor=\"let step of steps; let i = index\"></div>\n          </div>\n          <div class=\"explain-progression-buttons\">\n            <button class=\"btn previous\" (click)=\"previousStep()\">Précédent</button>\n            <button class=\"btn next\" (click)=\"nextStep()\">Suivant</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  `, isInline: true, styles: [\"@import\\\"https://use.typekit.net/bks3dkn.css\\\";:root{--progress-width: 0}*{box-sizing:border-box}html,body,ng-explain-wrapper{padding:0;margin:0;position:relative}.ng-explain-wrapper{display:flex;flex-direction:column;align-items:center;justify-content:center;width:100%;height:100%;position:absolute;top:0;left:0}.overlay{position:absolute;top:0;left:0;width:100%;height:100%;z-index:1000;background-color:#00000091}.explain-wrapper{display:flex;flex-direction:column;align-items:center;justify-content:center;position:relative;width:30rem;min-height:28rem;padding:2.5rem 3.5rem;overflow:clip;text-overflow:clip;background-color:#fff;box-shadow:#32325d40 0 2px 5px -1px,#0000004d 0 1px 3px -1px;border-radius:1rem;text-align:center;z-index:10002}.explain-text-content{margin-top:1rem}.explain-text-content>h3{margin-bottom:2rem;color:#220f3cbf}.explain-text-content>p{line-height:1.7}.explain-progression-container{display:flex;flex-direction:column;align-items:center;margin-top:3rem}.explain-progression-container>.explain-progression-buttons>.btn{width:7rem;color:#fff;font-weight:700;height:2rem;border:none;border-radius:.2rem}.explain-progression-container>.explain-progression-buttons>.next{background-color:#220f3c}.explain-progression-container>.explain-progression-buttons>.previous{margin-right:2rem;background-color:#220f3c6b}.explain-progression-container>.explain-progression-dots{display:flex;justify-content:space-between;position:relative;width:9rem;max-width:100%;margin-bottom:2rem}.explain-progression-container>.explain-progression-dots>.progress-round{height:.8rem;width:.8rem;background-color:#efefeff7;transition:.6s ease-in-out;border-radius:50%}.explain-progression-container>.explain-progression-dots>.progress-round.active{background-color:#ff407f}.progress-round:first-child{background-color:#ff407f}.explain-wrapper>.explain-close{display:flex;justify-content:center;align-items:center;position:absolute;top:0;right:12px;height:.8rem;width:.8rem;padding:.8rem;cursor:pointer;background-color:#a29aad;border-radius:50%;color:#fff;font-size:.8rem}\\n\"], dependencies: [{ kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.5\", ngImport: i0, type: NgExplainComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ng-explain', template: `\n    <div class=\"ng-explain-wrapper\">\n      <div class=\"overlay\"></div>\n      <div class=\"explain-wrapper\" *ngIf=\"steps\" #explain>\n        <p class=\"explain-close\" (click)=\"close()\">x</p>\n        <div class=\"explain-text-content\">\n          <h3>{{ currentSteps.title }}</h3>\n          <p>{{ currentSteps.desc }}</p>\n        </div>\n        <div class=\"explain-progression-container\">\n          <div class=\"explain-progression-dots\" #progressbar>\n            <div class=\"progress-round\" *ngFor=\"let step of steps; let i = index\"></div>\n          </div>\n          <div class=\"explain-progression-buttons\">\n            <button class=\"btn previous\" (click)=\"previousStep()\">Précédent</button>\n            <button class=\"btn next\" (click)=\"nextStep()\">Suivant</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  `, styles: [\"@import\\\"https://use.typekit.net/bks3dkn.css\\\";:root{--progress-width: 0}*{box-sizing:border-box}html,body,ng-explain-wrapper{padding:0;margin:0;position:relative}.ng-explain-wrapper{display:flex;flex-direction:column;align-items:center;justify-content:center;width:100%;height:100%;position:absolute;top:0;left:0}.overlay{position:absolute;top:0;left:0;width:100%;height:100%;z-index:1000;background-color:#00000091}.explain-wrapper{display:flex;flex-direction:column;align-items:center;justify-content:center;position:relative;width:30rem;min-height:28rem;padding:2.5rem 3.5rem;overflow:clip;text-overflow:clip;background-color:#fff;box-shadow:#32325d40 0 2px 5px -1px,#0000004d 0 1px 3px -1px;border-radius:1rem;text-align:center;z-index:10002}.explain-text-content{margin-top:1rem}.explain-text-content>h3{margin-bottom:2rem;color:#220f3cbf}.explain-text-content>p{line-height:1.7}.explain-progression-container{display:flex;flex-direction:column;align-items:center;margin-top:3rem}.explain-progression-container>.explain-progression-buttons>.btn{width:7rem;color:#fff;font-weight:700;height:2rem;border:none;border-radius:.2rem}.explain-progression-container>.explain-progression-buttons>.next{background-color:#220f3c}.explain-progression-container>.explain-progression-buttons>.previous{margin-right:2rem;background-color:#220f3c6b}.explain-progression-container>.explain-progression-dots{display:flex;justify-content:space-between;position:relative;width:9rem;max-width:100%;margin-bottom:2rem}.explain-progression-container>.explain-progression-dots>.progress-round{height:.8rem;width:.8rem;background-color:#efefeff7;transition:.6s ease-in-out;border-radius:50%}.explain-progression-container>.explain-progression-dots>.progress-round.active{background-color:#ff407f}.progress-round:first-child{background-color:#ff407f}.explain-wrapper>.explain-close{display:flex;justify-content:center;align-items:center;position:absolute;top:0;right:12px;height:.8rem;width:.8rem;padding:.8rem;cursor:pointer;background-color:#a29aad;border-radius:50%;color:#fff;font-size:.8rem}\\n\"] }]\n        }], ctorParameters: function () { return []; }, propDecorators: { progressbar: [{\n                type: ViewChild,\n                args: ['progressbar']\n            }], explain: [{\n                type: ViewChild,\n                args: ['explain']\n            }], steps: [{\n                type: Input\n            }], closeTutorial: [{\n                type: Output\n            }] } });","originalLength":18184,"removedExports":[],"renderedExports":["NgExplainComponent"],"renderedLength":9524},"/Users/romann/Sites/Angular-Librarys/explain-js/dist/ng-explain/esm2020/lib/ng-explain.module.mjs":{"code":"class NgExplainModule {\n}\nNgExplainModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.5\", ngImport: i0, type: NgExplainModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNgExplainModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.1.5\", ngImport: i0, type: NgExplainModule, declarations: [NgExplainComponent], imports: [NgIf,\n        NgForOf], exports: [NgExplainComponent] });\nNgExplainModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.1.5\", ngImport: i0, type: NgExplainModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.5\", ngImport: i0, type: NgExplainModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        NgExplainComponent\n                    ],\n                    imports: [\n                        NgIf,\n                        NgForOf\n                    ],\n                    exports: [\n                        NgExplainComponent\n                    ]\n                }]\n        }] });","originalLength":2550,"removedExports":[],"renderedExports":["NgExplainModule"],"renderedLength":1079},"/Users/romann/Sites/Angular-Librarys/explain-js/dist/ng-explain/esm2020/public-api.mjs":{"code":"/*\n * Public API Surface of ng-explain\n */","originalLength":771,"removedExports":[],"renderedExports":[],"renderedLength":42},"/Users/romann/Sites/Angular-Librarys/explain-js/dist/ng-explain/esm2020/ng-explain.mjs":{"code":"/**\n * Generated bundle index. Do not edit.\n */","originalLength":496,"removedExports":[],"renderedExports":[],"renderedLength":47}},"referencedFiles":[],"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Component, ViewChild, Input, Output, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { NgIf, NgForOf } from '@angular/common';\n\nvar POSITIONS;\n(function (POSITIONS) {\n    POSITIONS[\"ABOVE\"] = \"above\";\n    POSITIONS[\"BELOW\"] = \"below\";\n    POSITIONS[\"LEFT\"] = \"left\";\n    POSITIONS[\"RIGHT\"] = \"right\";\n    POSITIONS[\"DEFAULT\"] = \"left\";\n})(POSITIONS || (POSITIONS = {}));\n\nclass NgExplainComponent {\n    constructor() {\n        this.closeTutorial = new EventEmitter();\n        this.currentStepElementOriginalBorder = '';\n        this.currentStepElementOriginalZindex = '';\n        this.position = 0;\n        this.percent = 0;\n        this.positions = POSITIONS.DEFAULT;\n    }\n    ngOnInit() {\n        this.currentSteps = this.steps[this.position];\n        this.changeCibling();\n    }\n    ngAfterViewInit() {\n        this.initProgressRound();\n    }\n    close() {\n        this.reInitOriginCibling();\n        this.closeTutorial.emit(true);\n    }\n    changeCibling() {\n        this.reInitOriginCibling();\n        this.currentSteps = this.steps[this.position];\n        this.currentStepElement = document.querySelector(this.currentSteps.selector);\n        const currentStepStyle = this.currentStepElement.style;\n        this.currentStepElementOriginalBorder = currentStepStyle.border;\n        this.currentStepElementOriginalZindex = currentStepStyle.zIndex;\n        currentStepStyle.zIndex = '1001';\n    }\n    reInitOriginCibling() {\n        if (this.currentStepElement) {\n            this.currentStepElement.style.border = this.currentStepElementOriginalBorder;\n            this.currentStepElement.style.zIndex = this.currentStepElementOriginalZindex;\n            this.currentStepElement.style.zIndex;\n        }\n    }\n    initProgressRound() {\n        this.rounds = document.querySelectorAll('.progress-round');\n        this.rounds[0].classList.add('active');\n    }\n    nextStep() {\n        if ((this.position + 1) < this.steps.length) {\n            this.position++;\n            this.changeCibling();\n            this.progressStepNext();\n        }\n        else {\n            this.close();\n        }\n    }\n    previousStep() {\n        if ((this.position - 1) >= 0) {\n            this.progressStepprevious();\n            this.position--;\n            this.changeCibling();\n        }\n    }\n    progressStepNext() {\n        if (this.position < this.rounds.length) {\n            this.rounds[this.position].classList.add('active');\n        }\n    }\n    progressStepprevious() {\n        if (this.position > 0) {\n            this.rounds[this.position].classList.remove('active');\n        }\n    }\n}\nNgExplainComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.5\", ngImport: i0, type: NgExplainComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nNgExplainComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.5\", type: NgExplainComponent, selector: \"ng-explain\", inputs: { steps: \"steps\" }, outputs: { closeTutorial: \"closeTutorial\" }, viewQueries: [{ propertyName: \"progressbar\", first: true, predicate: [\"progressbar\"], descendants: true }, { propertyName: \"explain\", first: true, predicate: [\"explain\"], descendants: true }], ngImport: i0, template: `\n    <div class=\"ng-explain-wrapper\">\n      <div class=\"overlay\"></div>\n      <div class=\"explain-wrapper\" *ngIf=\"steps\" #explain>\n        <p class=\"explain-close\" (click)=\"close()\">x</p>\n        <div class=\"explain-text-content\">\n          <h3>{{ currentSteps.title }}</h3>\n          <p>{{ currentSteps.desc }}</p>\n        </div>\n        <div class=\"explain-progression-container\">\n          <div class=\"explain-progression-dots\" #progressbar>\n            <div class=\"progress-round\" *ngFor=\"let step of steps; let i = index\"></div>\n          </div>\n          <div class=\"explain-progression-buttons\">\n            <button class=\"btn previous\" (click)=\"previousStep()\">Précédent</button>\n            <button class=\"btn next\" (click)=\"nextStep()\">Suivant</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  `, isInline: true, styles: [\"@import\\\"https://use.typekit.net/bks3dkn.css\\\";:root{--progress-width: 0}*{box-sizing:border-box}html,body,ng-explain-wrapper{padding:0;margin:0;position:relative}.ng-explain-wrapper{display:flex;flex-direction:column;align-items:center;justify-content:center;width:100%;height:100%;position:absolute;top:0;left:0}.overlay{position:absolute;top:0;left:0;width:100%;height:100%;z-index:1000;background-color:#00000091}.explain-wrapper{display:flex;flex-direction:column;align-items:center;justify-content:center;position:relative;width:30rem;min-height:28rem;padding:2.5rem 3.5rem;overflow:clip;text-overflow:clip;background-color:#fff;box-shadow:#32325d40 0 2px 5px -1px,#0000004d 0 1px 3px -1px;border-radius:1rem;text-align:center;z-index:10002}.explain-text-content{margin-top:1rem}.explain-text-content>h3{margin-bottom:2rem;color:#220f3cbf}.explain-text-content>p{line-height:1.7}.explain-progression-container{display:flex;flex-direction:column;align-items:center;margin-top:3rem}.explain-progression-container>.explain-progression-buttons>.btn{width:7rem;color:#fff;font-weight:700;height:2rem;border:none;border-radius:.2rem}.explain-progression-container>.explain-progression-buttons>.next{background-color:#220f3c}.explain-progression-container>.explain-progression-buttons>.previous{margin-right:2rem;background-color:#220f3c6b}.explain-progression-container>.explain-progression-dots{display:flex;justify-content:space-between;position:relative;width:9rem;max-width:100%;margin-bottom:2rem}.explain-progression-container>.explain-progression-dots>.progress-round{height:.8rem;width:.8rem;background-color:#efefeff7;transition:.6s ease-in-out;border-radius:50%}.explain-progression-container>.explain-progression-dots>.progress-round.active{background-color:#ff407f}.progress-round:first-child{background-color:#ff407f}.explain-wrapper>.explain-close{display:flex;justify-content:center;align-items:center;position:absolute;top:0;right:12px;height:.8rem;width:.8rem;padding:.8rem;cursor:pointer;background-color:#a29aad;border-radius:50%;color:#fff;font-size:.8rem}\\n\"], dependencies: [{ kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.5\", ngImport: i0, type: NgExplainComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ng-explain', template: `\n    <div class=\"ng-explain-wrapper\">\n      <div class=\"overlay\"></div>\n      <div class=\"explain-wrapper\" *ngIf=\"steps\" #explain>\n        <p class=\"explain-close\" (click)=\"close()\">x</p>\n        <div class=\"explain-text-content\">\n          <h3>{{ currentSteps.title }}</h3>\n          <p>{{ currentSteps.desc }}</p>\n        </div>\n        <div class=\"explain-progression-container\">\n          <div class=\"explain-progression-dots\" #progressbar>\n            <div class=\"progress-round\" *ngFor=\"let step of steps; let i = index\"></div>\n          </div>\n          <div class=\"explain-progression-buttons\">\n            <button class=\"btn previous\" (click)=\"previousStep()\">Précédent</button>\n            <button class=\"btn next\" (click)=\"nextStep()\">Suivant</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  `, styles: [\"@import\\\"https://use.typekit.net/bks3dkn.css\\\";:root{--progress-width: 0}*{box-sizing:border-box}html,body,ng-explain-wrapper{padding:0;margin:0;position:relative}.ng-explain-wrapper{display:flex;flex-direction:column;align-items:center;justify-content:center;width:100%;height:100%;position:absolute;top:0;left:0}.overlay{position:absolute;top:0;left:0;width:100%;height:100%;z-index:1000;background-color:#00000091}.explain-wrapper{display:flex;flex-direction:column;align-items:center;justify-content:center;position:relative;width:30rem;min-height:28rem;padding:2.5rem 3.5rem;overflow:clip;text-overflow:clip;background-color:#fff;box-shadow:#32325d40 0 2px 5px -1px,#0000004d 0 1px 3px -1px;border-radius:1rem;text-align:center;z-index:10002}.explain-text-content{margin-top:1rem}.explain-text-content>h3{margin-bottom:2rem;color:#220f3cbf}.explain-text-content>p{line-height:1.7}.explain-progression-container{display:flex;flex-direction:column;align-items:center;margin-top:3rem}.explain-progression-container>.explain-progression-buttons>.btn{width:7rem;color:#fff;font-weight:700;height:2rem;border:none;border-radius:.2rem}.explain-progression-container>.explain-progression-buttons>.next{background-color:#220f3c}.explain-progression-container>.explain-progression-buttons>.previous{margin-right:2rem;background-color:#220f3c6b}.explain-progression-container>.explain-progression-dots{display:flex;justify-content:space-between;position:relative;width:9rem;max-width:100%;margin-bottom:2rem}.explain-progression-container>.explain-progression-dots>.progress-round{height:.8rem;width:.8rem;background-color:#efefeff7;transition:.6s ease-in-out;border-radius:50%}.explain-progression-container>.explain-progression-dots>.progress-round.active{background-color:#ff407f}.progress-round:first-child{background-color:#ff407f}.explain-wrapper>.explain-close{display:flex;justify-content:center;align-items:center;position:absolute;top:0;right:12px;height:.8rem;width:.8rem;padding:.8rem;cursor:pointer;background-color:#a29aad;border-radius:50%;color:#fff;font-size:.8rem}\\n\"] }]\n        }], ctorParameters: function () { return []; }, propDecorators: { progressbar: [{\n                type: ViewChild,\n                args: ['progressbar']\n            }], explain: [{\n                type: ViewChild,\n                args: ['explain']\n            }], steps: [{\n                type: Input\n            }], closeTutorial: [{\n                type: Output\n            }] } });\n\nclass NgExplainModule {\n}\nNgExplainModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.5\", ngImport: i0, type: NgExplainModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNgExplainModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.1.5\", ngImport: i0, type: NgExplainModule, declarations: [NgExplainComponent], imports: [NgIf,\n        NgForOf], exports: [NgExplainComponent] });\nNgExplainModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.1.5\", ngImport: i0, type: NgExplainModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.5\", ngImport: i0, type: NgExplainModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        NgExplainComponent\n                    ],\n                    imports: [\n                        NgIf,\n                        NgForOf\n                    ],\n                    exports: [\n                        NgExplainComponent\n                    ]\n                }]\n        }] });\n\n/*\n * Public API Surface of ng-explain\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NgExplainComponent, NgExplainModule };\n//# sourceMappingURL=ng-explain.mjs.map\n","map":null},{"fileName":"ng-explain.mjs.map","needsCodeReference":false,"source":"{\"version\":3,\"file\":\"ng-explain.mjs\",\"sources\":[\"../../../projects/ng-explain/src/lib/Enums/positions.ts\",\"../../../projects/ng-explain/src/lib/ng-explain.component.ts\",\"../../../projects/ng-explain/src/lib/ng-explain.module.ts\",\"../../../projects/ng-explain/src/public-api.ts\",\"../../../projects/ng-explain/src/ng-explain.ts\"],\"sourcesContent\":[\"export enum POSITIONS {\\n    ABOVE = 'above',\\n    BELOW = 'below',\\n    LEFT = 'left',\\n    RIGHT = 'right',\\n    DEFAULT = 'left'\\n}\\n\\n\\n\",\"import {AfterViewInit, Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\\nimport {POSITIONS} from \\\"./Enums/positions\\\";\\n\\ninterface ISteps {\\n  title: string;\\n  desc: string;\\n  selector: string;\\n}\\n\\n@Component({\\n  selector: 'ng-explain',\\n  template: `\\n    <div class=\\\"ng-explain-wrapper\\\">\\n      <div class=\\\"overlay\\\"></div>\\n      <div class=\\\"explain-wrapper\\\" *ngIf=\\\"steps\\\" #explain>\\n        <p class=\\\"explain-close\\\" (click)=\\\"close()\\\">x</p>\\n        <div class=\\\"explain-text-content\\\">\\n          <h3>{{ currentSteps.title }}</h3>\\n          <p>{{ currentSteps.desc }}</p>\\n        </div>\\n        <div class=\\\"explain-progression-container\\\">\\n          <div class=\\\"explain-progression-dots\\\" #progressbar>\\n            <div class=\\\"progress-round\\\" *ngFor=\\\"let step of steps; let i = index\\\"></div>\\n          </div>\\n          <div class=\\\"explain-progression-buttons\\\">\\n            <button class=\\\"btn previous\\\" (click)=\\\"previousStep()\\\">Précédent</button>\\n            <button class=\\\"btn next\\\" (click)=\\\"nextStep()\\\">Suivant</button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  `,\\n  styleUrls: [\\\"./ng-explain.component.scss\\\"]\\n})\\nexport class NgExplainComponent implements OnInit, AfterViewInit {\\n  @ViewChild('progressbar') progressbar!: ElementRef;\\n  @ViewChild('explain') explain!: ElementRef;\\n\\n  @Input() steps!: ISteps[];\\n  @Output() closeTutorial: EventEmitter<boolean> = new EventEmitter();\\n\\n  currentSteps!: ISteps;\\n  currentStepElement!: HTMLElement;\\n  currentStepElementOriginalBorder = '';\\n  currentStepElementOriginalZindex = '';\\n  position = 0;\\n  rounds!: NodeListOf<HTMLElement>;\\n  percent = 0;\\n  positions: POSITIONS = POSITIONS.DEFAULT;\\n  elementCibling!: HTMLElement;\\n\\n  constructor() {\\n  }\\n\\n  ngOnInit(): void {\\n    this.currentSteps = this.steps[this.position];\\n    this.changeCibling();\\n  }\\n\\n  ngAfterViewInit(): void {\\n    this.initProgressRound();\\n  }\\n\\n  close(): void {\\n    this.reInitOriginCibling();\\n    this.closeTutorial.emit(true);\\n  }\\n\\n  changeCibling(): void {\\n    this.reInitOriginCibling();\\n\\n    this.currentSteps = this.steps[this.position];\\n\\n    this.currentStepElement = document.querySelector(this.currentSteps.selector) as HTMLElement;\\n    const currentStepStyle = this.currentStepElement.style;\\n    this.currentStepElementOriginalBorder = currentStepStyle.border;\\n    this.currentStepElementOriginalZindex = currentStepStyle.zIndex;\\n    currentStepStyle.zIndex = '1001';\\n  }\\n\\n  reInitOriginCibling(): void {\\n    if (this.currentStepElement) {\\n      this.currentStepElement.style.border = this.currentStepElementOriginalBorder;\\n      this.currentStepElement.style.zIndex = this.currentStepElementOriginalZindex;\\n      this.currentStepElement.style.zIndex;\\n    }\\n  }\\n\\n  initProgressRound(): void {\\n    this.rounds = document.querySelectorAll('.progress-round');\\n    this.rounds[0].classList.add('active');\\n  }\\n\\n  nextStep(): void {\\n    if ((this.position + 1) < this.steps.length) {\\n      this.position++;\\n      this.changeCibling();\\n      this.progressStepNext();\\n    } else {\\n      this.close();\\n    }\\n  }\\n\\n  previousStep(): void {\\n    if ((this.position - 1) >= 0) {\\n      this.progressStepprevious();\\n      this.position--;\\n      this.changeCibling();\\n    }\\n  }\\n\\n  progressStepNext(): void {\\n    if (this.position < this.rounds.length) {\\n      this.rounds[this.position].classList.add('active');\\n    }\\n  }\\n\\n  progressStepprevious(): void {\\n    if (this.position > 0) {\\n      this.rounds[this.position].classList.remove('active');\\n    }\\n  }\\n\\n}\\n\",\"import { NgModule } from '@angular/core';\\nimport { NgExplainComponent } from './ng-explain.component';\\nimport {NgIf, NgForOf} from \\\"@angular/common\\\";\\n\\n\\n@NgModule({\\n  declarations: [\\n    NgExplainComponent\\n  ],\\n  imports: [\\n    NgIf,\\n    NgForOf\\n  ],\\n  exports: [\\n    NgExplainComponent\\n  ]\\n})\\nexport class NgExplainModule { }\\n\",\"/*\\n * Public API Surface of ng-explain\\n */\\n\\n// export * from './lib/ng-explain.service';\\nexport * from './lib/ng-explain.component';\\nexport * from './lib/ng-explain.module';\\n\",\"/**\\n * Generated bundle index. Do not edit.\\n */\\n\\nexport * from './public-api';\\n\"],\"names\":[],\"mappings\":\"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\"}","type":"asset"}],"fesm2015":[{"exports":["NgExplainComponent","NgExplainModule"],"facadeModuleId":"/Users/romann/Sites/Angular-Librarys/explain-js/dist/ng-explain/esm2020/ng-explain.mjs","isDynamicEntry":false,"isEntry":true,"isImplicitEntry":false,"moduleIds":["/Users/romann/Sites/Angular-Librarys/explain-js/dist/ng-explain/esm2020/lib/Enums/positions.mjs","/Users/romann/Sites/Angular-Librarys/explain-js/dist/ng-explain/esm2020/lib/ng-explain.component.mjs","/Users/romann/Sites/Angular-Librarys/explain-js/dist/ng-explain/esm2020/lib/ng-explain.module.mjs","/Users/romann/Sites/Angular-Librarys/explain-js/dist/ng-explain/esm2020/public-api.mjs","/Users/romann/Sites/Angular-Librarys/explain-js/dist/ng-explain/esm2020/ng-explain.mjs"],"name":"ng-explain","type":"chunk","dynamicImports":[],"fileName":"ng-explain.mjs","implicitlyLoadedBefore":[],"importedBindings":{"@angular/core":["EventEmitter","*","Component","ViewChild","Input","Output","NgModule"],"@angular/common":["*","NgIf","NgForOf"]},"imports":["@angular/core","@angular/common"],"modules":{"/Users/romann/Sites/Angular-Librarys/explain-js/dist/ng-explain/esm2020/lib/Enums/positions.mjs":{"code":"var POSITIONS;\n(function (POSITIONS) {\n    POSITIONS[\"ABOVE\"] = \"above\";\n    POSITIONS[\"BELOW\"] = \"below\";\n    POSITIONS[\"LEFT\"] = \"left\";\n    POSITIONS[\"RIGHT\"] = \"right\";\n    POSITIONS[\"DEFAULT\"] = \"left\";\n})(POSITIONS || (POSITIONS = {}));","originalLength":932,"removedExports":[],"renderedExports":["POSITIONS"],"renderedLength":242},"/Users/romann/Sites/Angular-Librarys/explain-js/dist/ng-explain/esm2020/lib/ng-explain.component.mjs":{"code":"class NgExplainComponent {\n    constructor() {\n        this.closeTutorial = new EventEmitter();\n        this.currentStepElementOriginalBorder = '';\n        this.currentStepElementOriginalZindex = '';\n        this.position = 0;\n        this.percent = 0;\n        this.positions = POSITIONS.DEFAULT;\n    }\n    ngOnInit() {\n        this.currentSteps = this.steps[this.position];\n        this.changeCibling();\n    }\n    ngAfterViewInit() {\n        this.initProgressRound();\n    }\n    close() {\n        this.reInitOriginCibling();\n        this.closeTutorial.emit(true);\n    }\n    changeCibling() {\n        this.reInitOriginCibling();\n        this.currentSteps = this.steps[this.position];\n        this.currentStepElement = document.querySelector(this.currentSteps.selector);\n        const currentStepStyle = this.currentStepElement.style;\n        this.currentStepElementOriginalBorder = currentStepStyle.border;\n        this.currentStepElementOriginalZindex = currentStepStyle.zIndex;\n        currentStepStyle.zIndex = '1001';\n    }\n    reInitOriginCibling() {\n        if (this.currentStepElement) {\n            this.currentStepElement.style.border = this.currentStepElementOriginalBorder;\n            this.currentStepElement.style.zIndex = this.currentStepElementOriginalZindex;\n            this.currentStepElement.style.zIndex;\n        }\n    }\n    initProgressRound() {\n        this.rounds = document.querySelectorAll('.progress-round');\n        this.rounds[0].classList.add('active');\n    }\n    nextStep() {\n        if ((this.position + 1) < this.steps.length) {\n            this.position++;\n            this.changeCibling();\n            this.progressStepNext();\n        }\n        else {\n            this.close();\n        }\n    }\n    previousStep() {\n        if ((this.position - 1) >= 0) {\n            this.progressStepprevious();\n            this.position--;\n            this.changeCibling();\n        }\n    }\n    progressStepNext() {\n        if (this.position < this.rounds.length) {\n            this.rounds[this.position].classList.add('active');\n        }\n    }\n    progressStepprevious() {\n        if (this.position > 0) {\n            this.rounds[this.position].classList.remove('active');\n        }\n    }\n}\nNgExplainComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.5\", ngImport: i0, type: NgExplainComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nNgExplainComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.5\", type: NgExplainComponent, selector: \"ng-explain\", inputs: { steps: \"steps\" }, outputs: { closeTutorial: \"closeTutorial\" }, viewQueries: [{ propertyName: \"progressbar\", first: true, predicate: [\"progressbar\"], descendants: true }, { propertyName: \"explain\", first: true, predicate: [\"explain\"], descendants: true }], ngImport: i0, template: `\n    <div class=\"ng-explain-wrapper\">\n      <div class=\"overlay\"></div>\n      <div class=\"explain-wrapper\" *ngIf=\"steps\" #explain>\n        <p class=\"explain-close\" (click)=\"close()\">x</p>\n        <div class=\"explain-text-content\">\n          <h3>{{ currentSteps.title }}</h3>\n          <p>{{ currentSteps.desc }}</p>\n        </div>\n        <div class=\"explain-progression-container\">\n          <div class=\"explain-progression-dots\" #progressbar>\n            <div class=\"progress-round\" *ngFor=\"let step of steps; let i = index\"></div>\n          </div>\n          <div class=\"explain-progression-buttons\">\n            <button class=\"btn previous\" (click)=\"previousStep()\">Précédent</button>\n            <button class=\"btn next\" (click)=\"nextStep()\">Suivant</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  `, isInline: true, styles: [\"@import\\\"https://use.typekit.net/bks3dkn.css\\\";:root{--progress-width: 0}*{box-sizing:border-box}html,body,ng-explain-wrapper{padding:0;margin:0;position:relative}.ng-explain-wrapper{display:flex;flex-direction:column;align-items:center;justify-content:center;width:100%;height:100%;position:absolute;top:0;left:0}.overlay{position:absolute;top:0;left:0;width:100%;height:100%;z-index:1000;background-color:#00000091}.explain-wrapper{display:flex;flex-direction:column;align-items:center;justify-content:center;position:relative;width:30rem;min-height:28rem;padding:2.5rem 3.5rem;overflow:clip;text-overflow:clip;background-color:#fff;box-shadow:#32325d40 0 2px 5px -1px,#0000004d 0 1px 3px -1px;border-radius:1rem;text-align:center;z-index:10002}.explain-text-content{margin-top:1rem}.explain-text-content>h3{margin-bottom:2rem;color:#220f3cbf}.explain-text-content>p{line-height:1.7}.explain-progression-container{display:flex;flex-direction:column;align-items:center;margin-top:3rem}.explain-progression-container>.explain-progression-buttons>.btn{width:7rem;color:#fff;font-weight:700;height:2rem;border:none;border-radius:.2rem}.explain-progression-container>.explain-progression-buttons>.next{background-color:#220f3c}.explain-progression-container>.explain-progression-buttons>.previous{margin-right:2rem;background-color:#220f3c6b}.explain-progression-container>.explain-progression-dots{display:flex;justify-content:space-between;position:relative;width:9rem;max-width:100%;margin-bottom:2rem}.explain-progression-container>.explain-progression-dots>.progress-round{height:.8rem;width:.8rem;background-color:#efefeff7;transition:.6s ease-in-out;border-radius:50%}.explain-progression-container>.explain-progression-dots>.progress-round.active{background-color:#ff407f}.progress-round:first-child{background-color:#ff407f}.explain-wrapper>.explain-close{display:flex;justify-content:center;align-items:center;position:absolute;top:0;right:12px;height:.8rem;width:.8rem;padding:.8rem;cursor:pointer;background-color:#a29aad;border-radius:50%;color:#fff;font-size:.8rem}\\n\"], dependencies: [{ kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.5\", ngImport: i0, type: NgExplainComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ng-explain', template: `\n    <div class=\"ng-explain-wrapper\">\n      <div class=\"overlay\"></div>\n      <div class=\"explain-wrapper\" *ngIf=\"steps\" #explain>\n        <p class=\"explain-close\" (click)=\"close()\">x</p>\n        <div class=\"explain-text-content\">\n          <h3>{{ currentSteps.title }}</h3>\n          <p>{{ currentSteps.desc }}</p>\n        </div>\n        <div class=\"explain-progression-container\">\n          <div class=\"explain-progression-dots\" #progressbar>\n            <div class=\"progress-round\" *ngFor=\"let step of steps; let i = index\"></div>\n          </div>\n          <div class=\"explain-progression-buttons\">\n            <button class=\"btn previous\" (click)=\"previousStep()\">Précédent</button>\n            <button class=\"btn next\" (click)=\"nextStep()\">Suivant</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  `, styles: [\"@import\\\"https://use.typekit.net/bks3dkn.css\\\";:root{--progress-width: 0}*{box-sizing:border-box}html,body,ng-explain-wrapper{padding:0;margin:0;position:relative}.ng-explain-wrapper{display:flex;flex-direction:column;align-items:center;justify-content:center;width:100%;height:100%;position:absolute;top:0;left:0}.overlay{position:absolute;top:0;left:0;width:100%;height:100%;z-index:1000;background-color:#00000091}.explain-wrapper{display:flex;flex-direction:column;align-items:center;justify-content:center;position:relative;width:30rem;min-height:28rem;padding:2.5rem 3.5rem;overflow:clip;text-overflow:clip;background-color:#fff;box-shadow:#32325d40 0 2px 5px -1px,#0000004d 0 1px 3px -1px;border-radius:1rem;text-align:center;z-index:10002}.explain-text-content{margin-top:1rem}.explain-text-content>h3{margin-bottom:2rem;color:#220f3cbf}.explain-text-content>p{line-height:1.7}.explain-progression-container{display:flex;flex-direction:column;align-items:center;margin-top:3rem}.explain-progression-container>.explain-progression-buttons>.btn{width:7rem;color:#fff;font-weight:700;height:2rem;border:none;border-radius:.2rem}.explain-progression-container>.explain-progression-buttons>.next{background-color:#220f3c}.explain-progression-container>.explain-progression-buttons>.previous{margin-right:2rem;background-color:#220f3c6b}.explain-progression-container>.explain-progression-dots{display:flex;justify-content:space-between;position:relative;width:9rem;max-width:100%;margin-bottom:2rem}.explain-progression-container>.explain-progression-dots>.progress-round{height:.8rem;width:.8rem;background-color:#efefeff7;transition:.6s ease-in-out;border-radius:50%}.explain-progression-container>.explain-progression-dots>.progress-round.active{background-color:#ff407f}.progress-round:first-child{background-color:#ff407f}.explain-wrapper>.explain-close{display:flex;justify-content:center;align-items:center;position:absolute;top:0;right:12px;height:.8rem;width:.8rem;padding:.8rem;cursor:pointer;background-color:#a29aad;border-radius:50%;color:#fff;font-size:.8rem}\\n\"] }]\n        }], ctorParameters: function () { return []; }, propDecorators: { progressbar: [{\n                type: ViewChild,\n                args: ['progressbar']\n            }], explain: [{\n                type: ViewChild,\n                args: ['explain']\n            }], steps: [{\n                type: Input\n            }], closeTutorial: [{\n                type: Output\n            }] } });","originalLength":18184,"removedExports":[],"renderedExports":["NgExplainComponent"],"renderedLength":9524},"/Users/romann/Sites/Angular-Librarys/explain-js/dist/ng-explain/esm2020/lib/ng-explain.module.mjs":{"code":"class NgExplainModule {\n}\nNgExplainModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.5\", ngImport: i0, type: NgExplainModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNgExplainModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.1.5\", ngImport: i0, type: NgExplainModule, declarations: [NgExplainComponent], imports: [NgIf,\n        NgForOf], exports: [NgExplainComponent] });\nNgExplainModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.1.5\", ngImport: i0, type: NgExplainModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.5\", ngImport: i0, type: NgExplainModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        NgExplainComponent\n                    ],\n                    imports: [\n                        NgIf,\n                        NgForOf\n                    ],\n                    exports: [\n                        NgExplainComponent\n                    ]\n                }]\n        }] });","originalLength":2550,"removedExports":[],"renderedExports":["NgExplainModule"],"renderedLength":1079},"/Users/romann/Sites/Angular-Librarys/explain-js/dist/ng-explain/esm2020/public-api.mjs":{"code":"/*\n * Public API Surface of ng-explain\n */","originalLength":771,"removedExports":[],"renderedExports":[],"renderedLength":42},"/Users/romann/Sites/Angular-Librarys/explain-js/dist/ng-explain/esm2020/ng-explain.mjs":{"code":"/**\n * Generated bundle index. Do not edit.\n */","originalLength":496,"removedExports":[],"renderedExports":[],"renderedLength":47}},"referencedFiles":[],"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Component, ViewChild, Input, Output, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { NgIf, NgForOf } from '@angular/common';\n\nvar POSITIONS;\n(function (POSITIONS) {\n    POSITIONS[\"ABOVE\"] = \"above\";\n    POSITIONS[\"BELOW\"] = \"below\";\n    POSITIONS[\"LEFT\"] = \"left\";\n    POSITIONS[\"RIGHT\"] = \"right\";\n    POSITIONS[\"DEFAULT\"] = \"left\";\n})(POSITIONS || (POSITIONS = {}));\n\nclass NgExplainComponent {\n    constructor() {\n        this.closeTutorial = new EventEmitter();\n        this.currentStepElementOriginalBorder = '';\n        this.currentStepElementOriginalZindex = '';\n        this.position = 0;\n        this.percent = 0;\n        this.positions = POSITIONS.DEFAULT;\n    }\n    ngOnInit() {\n        this.currentSteps = this.steps[this.position];\n        this.changeCibling();\n    }\n    ngAfterViewInit() {\n        this.initProgressRound();\n    }\n    close() {\n        this.reInitOriginCibling();\n        this.closeTutorial.emit(true);\n    }\n    changeCibling() {\n        this.reInitOriginCibling();\n        this.currentSteps = this.steps[this.position];\n        this.currentStepElement = document.querySelector(this.currentSteps.selector);\n        const currentStepStyle = this.currentStepElement.style;\n        this.currentStepElementOriginalBorder = currentStepStyle.border;\n        this.currentStepElementOriginalZindex = currentStepStyle.zIndex;\n        currentStepStyle.zIndex = '1001';\n    }\n    reInitOriginCibling() {\n        if (this.currentStepElement) {\n            this.currentStepElement.style.border = this.currentStepElementOriginalBorder;\n            this.currentStepElement.style.zIndex = this.currentStepElementOriginalZindex;\n            this.currentStepElement.style.zIndex;\n        }\n    }\n    initProgressRound() {\n        this.rounds = document.querySelectorAll('.progress-round');\n        this.rounds[0].classList.add('active');\n    }\n    nextStep() {\n        if ((this.position + 1) < this.steps.length) {\n            this.position++;\n            this.changeCibling();\n            this.progressStepNext();\n        }\n        else {\n            this.close();\n        }\n    }\n    previousStep() {\n        if ((this.position - 1) >= 0) {\n            this.progressStepprevious();\n            this.position--;\n            this.changeCibling();\n        }\n    }\n    progressStepNext() {\n        if (this.position < this.rounds.length) {\n            this.rounds[this.position].classList.add('active');\n        }\n    }\n    progressStepprevious() {\n        if (this.position > 0) {\n            this.rounds[this.position].classList.remove('active');\n        }\n    }\n}\nNgExplainComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.5\", ngImport: i0, type: NgExplainComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nNgExplainComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.5\", type: NgExplainComponent, selector: \"ng-explain\", inputs: { steps: \"steps\" }, outputs: { closeTutorial: \"closeTutorial\" }, viewQueries: [{ propertyName: \"progressbar\", first: true, predicate: [\"progressbar\"], descendants: true }, { propertyName: \"explain\", first: true, predicate: [\"explain\"], descendants: true }], ngImport: i0, template: `\n    <div class=\"ng-explain-wrapper\">\n      <div class=\"overlay\"></div>\n      <div class=\"explain-wrapper\" *ngIf=\"steps\" #explain>\n        <p class=\"explain-close\" (click)=\"close()\">x</p>\n        <div class=\"explain-text-content\">\n          <h3>{{ currentSteps.title }}</h3>\n          <p>{{ currentSteps.desc }}</p>\n        </div>\n        <div class=\"explain-progression-container\">\n          <div class=\"explain-progression-dots\" #progressbar>\n            <div class=\"progress-round\" *ngFor=\"let step of steps; let i = index\"></div>\n          </div>\n          <div class=\"explain-progression-buttons\">\n            <button class=\"btn previous\" (click)=\"previousStep()\">Précédent</button>\n            <button class=\"btn next\" (click)=\"nextStep()\">Suivant</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  `, isInline: true, styles: [\"@import\\\"https://use.typekit.net/bks3dkn.css\\\";:root{--progress-width: 0}*{box-sizing:border-box}html,body,ng-explain-wrapper{padding:0;margin:0;position:relative}.ng-explain-wrapper{display:flex;flex-direction:column;align-items:center;justify-content:center;width:100%;height:100%;position:absolute;top:0;left:0}.overlay{position:absolute;top:0;left:0;width:100%;height:100%;z-index:1000;background-color:#00000091}.explain-wrapper{display:flex;flex-direction:column;align-items:center;justify-content:center;position:relative;width:30rem;min-height:28rem;padding:2.5rem 3.5rem;overflow:clip;text-overflow:clip;background-color:#fff;box-shadow:#32325d40 0 2px 5px -1px,#0000004d 0 1px 3px -1px;border-radius:1rem;text-align:center;z-index:10002}.explain-text-content{margin-top:1rem}.explain-text-content>h3{margin-bottom:2rem;color:#220f3cbf}.explain-text-content>p{line-height:1.7}.explain-progression-container{display:flex;flex-direction:column;align-items:center;margin-top:3rem}.explain-progression-container>.explain-progression-buttons>.btn{width:7rem;color:#fff;font-weight:700;height:2rem;border:none;border-radius:.2rem}.explain-progression-container>.explain-progression-buttons>.next{background-color:#220f3c}.explain-progression-container>.explain-progression-buttons>.previous{margin-right:2rem;background-color:#220f3c6b}.explain-progression-container>.explain-progression-dots{display:flex;justify-content:space-between;position:relative;width:9rem;max-width:100%;margin-bottom:2rem}.explain-progression-container>.explain-progression-dots>.progress-round{height:.8rem;width:.8rem;background-color:#efefeff7;transition:.6s ease-in-out;border-radius:50%}.explain-progression-container>.explain-progression-dots>.progress-round.active{background-color:#ff407f}.progress-round:first-child{background-color:#ff407f}.explain-wrapper>.explain-close{display:flex;justify-content:center;align-items:center;position:absolute;top:0;right:12px;height:.8rem;width:.8rem;padding:.8rem;cursor:pointer;background-color:#a29aad;border-radius:50%;color:#fff;font-size:.8rem}\\n\"], dependencies: [{ kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.5\", ngImport: i0, type: NgExplainComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ng-explain', template: `\n    <div class=\"ng-explain-wrapper\">\n      <div class=\"overlay\"></div>\n      <div class=\"explain-wrapper\" *ngIf=\"steps\" #explain>\n        <p class=\"explain-close\" (click)=\"close()\">x</p>\n        <div class=\"explain-text-content\">\n          <h3>{{ currentSteps.title }}</h3>\n          <p>{{ currentSteps.desc }}</p>\n        </div>\n        <div class=\"explain-progression-container\">\n          <div class=\"explain-progression-dots\" #progressbar>\n            <div class=\"progress-round\" *ngFor=\"let step of steps; let i = index\"></div>\n          </div>\n          <div class=\"explain-progression-buttons\">\n            <button class=\"btn previous\" (click)=\"previousStep()\">Précédent</button>\n            <button class=\"btn next\" (click)=\"nextStep()\">Suivant</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  `, styles: [\"@import\\\"https://use.typekit.net/bks3dkn.css\\\";:root{--progress-width: 0}*{box-sizing:border-box}html,body,ng-explain-wrapper{padding:0;margin:0;position:relative}.ng-explain-wrapper{display:flex;flex-direction:column;align-items:center;justify-content:center;width:100%;height:100%;position:absolute;top:0;left:0}.overlay{position:absolute;top:0;left:0;width:100%;height:100%;z-index:1000;background-color:#00000091}.explain-wrapper{display:flex;flex-direction:column;align-items:center;justify-content:center;position:relative;width:30rem;min-height:28rem;padding:2.5rem 3.5rem;overflow:clip;text-overflow:clip;background-color:#fff;box-shadow:#32325d40 0 2px 5px -1px,#0000004d 0 1px 3px -1px;border-radius:1rem;text-align:center;z-index:10002}.explain-text-content{margin-top:1rem}.explain-text-content>h3{margin-bottom:2rem;color:#220f3cbf}.explain-text-content>p{line-height:1.7}.explain-progression-container{display:flex;flex-direction:column;align-items:center;margin-top:3rem}.explain-progression-container>.explain-progression-buttons>.btn{width:7rem;color:#fff;font-weight:700;height:2rem;border:none;border-radius:.2rem}.explain-progression-container>.explain-progression-buttons>.next{background-color:#220f3c}.explain-progression-container>.explain-progression-buttons>.previous{margin-right:2rem;background-color:#220f3c6b}.explain-progression-container>.explain-progression-dots{display:flex;justify-content:space-between;position:relative;width:9rem;max-width:100%;margin-bottom:2rem}.explain-progression-container>.explain-progression-dots>.progress-round{height:.8rem;width:.8rem;background-color:#efefeff7;transition:.6s ease-in-out;border-radius:50%}.explain-progression-container>.explain-progression-dots>.progress-round.active{background-color:#ff407f}.progress-round:first-child{background-color:#ff407f}.explain-wrapper>.explain-close{display:flex;justify-content:center;align-items:center;position:absolute;top:0;right:12px;height:.8rem;width:.8rem;padding:.8rem;cursor:pointer;background-color:#a29aad;border-radius:50%;color:#fff;font-size:.8rem}\\n\"] }]\n        }], ctorParameters: function () { return []; }, propDecorators: { progressbar: [{\n                type: ViewChild,\n                args: ['progressbar']\n            }], explain: [{\n                type: ViewChild,\n                args: ['explain']\n            }], steps: [{\n                type: Input\n            }], closeTutorial: [{\n                type: Output\n            }] } });\n\nclass NgExplainModule {\n}\nNgExplainModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.5\", ngImport: i0, type: NgExplainModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNgExplainModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.1.5\", ngImport: i0, type: NgExplainModule, declarations: [NgExplainComponent], imports: [NgIf,\n        NgForOf], exports: [NgExplainComponent] });\nNgExplainModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.1.5\", ngImport: i0, type: NgExplainModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.5\", ngImport: i0, type: NgExplainModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        NgExplainComponent\n                    ],\n                    imports: [\n                        NgIf,\n                        NgForOf\n                    ],\n                    exports: [\n                        NgExplainComponent\n                    ]\n                }]\n        }] });\n\n/*\n * Public API Surface of ng-explain\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NgExplainComponent, NgExplainModule };\n//# sourceMappingURL=ng-explain.mjs.map\n","map":null},{"fileName":"ng-explain.mjs.map","needsCodeReference":false,"source":"{\"version\":3,\"file\":\"ng-explain.mjs\",\"sources\":[\"../../../projects/ng-explain/src/lib/Enums/positions.ts\",\"../../../projects/ng-explain/src/lib/ng-explain.component.ts\",\"../../../projects/ng-explain/src/lib/ng-explain.module.ts\",\"../../../projects/ng-explain/src/public-api.ts\",\"../../../projects/ng-explain/src/ng-explain.ts\"],\"sourcesContent\":[\"export enum POSITIONS {\\n    ABOVE = 'above',\\n    BELOW = 'below',\\n    LEFT = 'left',\\n    RIGHT = 'right',\\n    DEFAULT = 'left'\\n}\\n\\n\\n\",\"import {AfterViewInit, Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\\nimport {POSITIONS} from \\\"./Enums/positions\\\";\\n\\ninterface ISteps {\\n  title: string;\\n  desc: string;\\n  selector: string;\\n}\\n\\n@Component({\\n  selector: 'ng-explain',\\n  template: `\\n    <div class=\\\"ng-explain-wrapper\\\">\\n      <div class=\\\"overlay\\\"></div>\\n      <div class=\\\"explain-wrapper\\\" *ngIf=\\\"steps\\\" #explain>\\n        <p class=\\\"explain-close\\\" (click)=\\\"close()\\\">x</p>\\n        <div class=\\\"explain-text-content\\\">\\n          <h3>{{ currentSteps.title }}</h3>\\n          <p>{{ currentSteps.desc }}</p>\\n        </div>\\n        <div class=\\\"explain-progression-container\\\">\\n          <div class=\\\"explain-progression-dots\\\" #progressbar>\\n            <div class=\\\"progress-round\\\" *ngFor=\\\"let step of steps; let i = index\\\"></div>\\n          </div>\\n          <div class=\\\"explain-progression-buttons\\\">\\n            <button class=\\\"btn previous\\\" (click)=\\\"previousStep()\\\">Précédent</button>\\n            <button class=\\\"btn next\\\" (click)=\\\"nextStep()\\\">Suivant</button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  `,\\n  styleUrls: [\\\"./ng-explain.component.scss\\\"]\\n})\\nexport class NgExplainComponent implements OnInit, AfterViewInit {\\n  @ViewChild('progressbar') progressbar!: ElementRef;\\n  @ViewChild('explain') explain!: ElementRef;\\n\\n  @Input() steps!: ISteps[];\\n  @Output() closeTutorial: EventEmitter<boolean> = new EventEmitter();\\n\\n  currentSteps!: ISteps;\\n  currentStepElement!: HTMLElement;\\n  currentStepElementOriginalBorder = '';\\n  currentStepElementOriginalZindex = '';\\n  position = 0;\\n  rounds!: NodeListOf<HTMLElement>;\\n  percent = 0;\\n  positions: POSITIONS = POSITIONS.DEFAULT;\\n  elementCibling!: HTMLElement;\\n\\n  constructor() {\\n  }\\n\\n  ngOnInit(): void {\\n    this.currentSteps = this.steps[this.position];\\n    this.changeCibling();\\n  }\\n\\n  ngAfterViewInit(): void {\\n    this.initProgressRound();\\n  }\\n\\n  close(): void {\\n    this.reInitOriginCibling();\\n    this.closeTutorial.emit(true);\\n  }\\n\\n  changeCibling(): void {\\n    this.reInitOriginCibling();\\n\\n    this.currentSteps = this.steps[this.position];\\n\\n    this.currentStepElement = document.querySelector(this.currentSteps.selector) as HTMLElement;\\n    const currentStepStyle = this.currentStepElement.style;\\n    this.currentStepElementOriginalBorder = currentStepStyle.border;\\n    this.currentStepElementOriginalZindex = currentStepStyle.zIndex;\\n    currentStepStyle.zIndex = '1001';\\n  }\\n\\n  reInitOriginCibling(): void {\\n    if (this.currentStepElement) {\\n      this.currentStepElement.style.border = this.currentStepElementOriginalBorder;\\n      this.currentStepElement.style.zIndex = this.currentStepElementOriginalZindex;\\n      this.currentStepElement.style.zIndex;\\n    }\\n  }\\n\\n  initProgressRound(): void {\\n    this.rounds = document.querySelectorAll('.progress-round');\\n    this.rounds[0].classList.add('active');\\n  }\\n\\n  nextStep(): void {\\n    if ((this.position + 1) < this.steps.length) {\\n      this.position++;\\n      this.changeCibling();\\n      this.progressStepNext();\\n    } else {\\n      this.close();\\n    }\\n  }\\n\\n  previousStep(): void {\\n    if ((this.position - 1) >= 0) {\\n      this.progressStepprevious();\\n      this.position--;\\n      this.changeCibling();\\n    }\\n  }\\n\\n  progressStepNext(): void {\\n    if (this.position < this.rounds.length) {\\n      this.rounds[this.position].classList.add('active');\\n    }\\n  }\\n\\n  progressStepprevious(): void {\\n    if (this.position > 0) {\\n      this.rounds[this.position].classList.remove('active');\\n    }\\n  }\\n\\n}\\n\",\"import { NgModule } from '@angular/core';\\nimport { NgExplainComponent } from './ng-explain.component';\\nimport {NgIf, NgForOf} from \\\"@angular/common\\\";\\n\\n\\n@NgModule({\\n  declarations: [\\n    NgExplainComponent\\n  ],\\n  imports: [\\n    NgIf,\\n    NgForOf\\n  ],\\n  exports: [\\n    NgExplainComponent\\n  ]\\n})\\nexport class NgExplainModule { }\\n\",\"/*\\n * Public API Surface of ng-explain\\n */\\n\\n// export * from './lib/ng-explain.service';\\nexport * from './lib/ng-explain.component';\\nexport * from './lib/ng-explain.module';\\n\",\"/**\\n * Generated bundle index. Do not edit.\\n */\\n\\nexport * from './public-api';\\n\"],\"names\":[],\"mappings\":\"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\"}","type":"asset"}]}